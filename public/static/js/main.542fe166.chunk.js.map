{"version":3,"sources":["components/welcome.js","components/expenseForm.js","components/expense.js","components/expenseList.js","components/dashboard.js","components/navigation.js","components/settings.js","components/stats.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","ExpenseForm","props","state","amount","description","merchant","timestamp","category","displayForm","showCategoryInput","handleInputChange","bind","handleSubmit","setDateTimePickerToNow","toggleExpenseForm","populateCategory","revealCategoryInput","this","renderNewExpenseForm","renderAddExpenseToggle","className","onClick","onSubmit","value","type","name","onChange","renderCategorySection","renderCategoryInput","disabled","validExpense","renderCategoryList","renderCategoryToggle","setState","placeholder","categories","map","trim","length","key","e","target","innerHTML","preventDefault","newExpense","submitNewExpense","timezoneOffset","Date","getTimezoneOffset","currentDatetime","now","toISOString","slice","prevState","Component","Expense","expense","id","deleteExpense","readableDate","dateString","dateComponents","substring","split","Number","ExpenseList","expenses","dates","sort","a","b","Set","getUniqueSortedDates","date","expensesOnThisDate","filter","getExpensesOnThisDate","expenseElements","expensesElements","spentThisDay","reduce","acc","moneySpentThisDay","renderExpenses","Dashboard","moneySpentToday","moneySpentThisMonth","dailyBudget","monthlyBalance","moneyFormat","leftToSpendToday","isToday","isThisMonth","today","getYear","getMonth","getDate","d","Math","floor","daysInMonth","monthlyBudget","month","year","number","abs","Navigation","navigateToPage","Settings","currentMonthlyBudget","validSettings","newBudget","updateMonthlyBudget","Stats","renderSpendingByCategory","spending","forEach","renderSpendingTable","Object","keys","percentage","App","currentPage","fetchExpenses","fetchMonthlyBudget","renderBodyContent","renderHome","renderStats","renderSettings","getCurrentBudget","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","response","status","message","catch","error","page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.542fe166.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../assets/stylesheets/welcome.scss';\n\nfunction Welcome(){\n  return(\n    <div className=\"welcome-page card\">\n      <h1>Welcome to Trakr</h1>\n      <h3>Trakr helps you</h3>\n      <ul>\n        <li>stay mindful of your spending</li>\n        <li>prevent impulse purchases</li>\n        <li>find holes in your budget</li>\n      </ul>\n\n      <div>\n        <p>To get started, sign in with your Google account</p>\n        <p></p>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome;\n","import '../assets/stylesheets/expenseForm.scss';\n\nimport React, { Component } from 'react';\n\nclass ExpenseForm extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      amount: \"\",\n      description: \"\",\n      merchant: \"\",\n      timestamp: \"\",\n      category: \"\",\n      displayForm: false,\n      showCategoryInput: false,\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDateTimePickerToNow = this.setDateTimePickerToNow.bind(this);\n    this.toggleExpenseForm = this.toggleExpenseForm.bind(this);\n    this.populateCategory = this.populateCategory.bind(this);\n    this.revealCategoryInput = this.revealCategoryInput.bind(this);\n  }\n\n  componentDidMount(){\n    this.setDateTimePickerToNow();\n  }\n\n  render(){\n    return this.state.displayForm ? this.renderNewExpenseForm() : this.renderAddExpenseToggle();\n  }\n\n  renderAddExpenseToggle(){\n    return (\n      <div className=\"add-expense-toggle\" onClick={this.toggleExpenseForm}>\n        <span className=\"plus\">+</span>\n      </div>\n    )\n  }\n\n  renderNewExpenseForm(){\n    return (\n      <div className=\"new-expense-form card\">\n        <h2>New Expense</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"one-input\">\n            <label>Amount</label>\n            <input value={this.state.amount} type='number' name='amount' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"one-input\">\n            <label>Description</label>\n            <input value={this.state.description} type='text' name='description' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"one-input\">\n            <label>Merchant</label>\n            <input value={this.state.merchant} type='text' name='merchant' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"one-input\">\n            <label>Category</label>\n            {this.renderCategorySection()}\n            {this.renderCategoryInput()}\n          </div>\n\n          <div className=\"one-input\">\n            <label>Date</label>\n            <input value={this.state.timestamp} type='datetime-local' name='timestamp' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"button-wrapper\">\n            <button className=\"cancel\" onClick={this.toggleExpenseForm}>Cancel</button>\n            <button className=\"submit\" disabled={this.validExpense()}>Add Expense</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  renderCategorySection(){\n    return (\n      <div className=\"category-section\">\n        {this.renderCategoryList()}\n        {this.renderCategoryToggle()}\n      </div>\n    )\n  }\n\n  revealCategoryInput() {\n    this.setState({\n      showCategoryInput: true,\n    })\n  }\n\n  renderCategoryInput(){\n    if(!this.state.showCategoryInput){ return null; }\n    return (<input value={this.state.category} type='text' name='category'  placeholder=\"enter category\" onChange={this.handleInputChange}></input>)\n  }\n\n  renderCategoryList(){\n    return this.props.categories.map((category) => {\n      if(category.trim().length){\n        return <span key={category} className=\"category\" onClick={this.populateCategory}>{category}</span>\n      }\n\n      return null;\n    })\n  }\n\n  renderCategoryToggle(){\n    if(this.state.showCategoryInput){ return null; }\n\n    return (\n      <span className=\"category add-new-category\" onClick={this.revealCategoryInput}>\n        <span className=\"lnr lnr-plus-circle\"></span>\n      </span>\n    )\n  }\n\n  handleInputChange(e){\n    const name = e.target.name;\n    this.setState({\n      [name]: e.target.value,\n    });\n  }\n\n  populateCategory(e){\n    this.setState({\n      category: e.target.innerHTML.trim(),\n      showCategoryInput: true,\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault(e);\n    \n    const newExpense = {\n      amount: this.state.amount,\n      description: this.state.description,\n      merchant: this.state.merchant,\n      timestamp: this.state.timestamp,\n      category: this.state.category,\n    }\n\n    this.props.submitNewExpense(newExpense);\n  }\n\n  resetState(){\n    this.setDateTimePickerToNow();\n    this.setState({\n      amount: \"\",\n      description: \"\",\n      merchant: \"\",\n      category: \"subscriptions\",\n    })\n  }\n\n  setDateTimePickerToNow(){\n    const timezoneOffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n    const currentDatetime = new Date(Date.now() - timezoneOffset).toISOString().slice(0,16);\n    this.setState({\n      timestamp: currentDatetime\n    })\n  }\n\n  validExpense(){\n    return (this.state.amount === 0 || this.state.description.length < 2 || !this.state.timestamp.length );\n  }\n\n  toggleExpenseForm(){\n    this.setState((prevState) => {\n      return {\n        displayForm: !prevState.displayForm\n      }\n    })\n  }\n}\n\nexport default ExpenseForm;\n","import React from 'react';\nimport '../assets/stylesheets/expense.scss';\n\nfunction Expense(props){\n  const { expense } = props;\n\n  return (\n    <div className=\"one-expense\" key={expense.id}>\n      <div>\n        <div className=\"category\">{expense.category}</div>\n        <div><strong>${expense.amount}</strong> for {expense.description || \"Undefined\"}</div>\n      </div>\n      <div onClick={() => { props.deleteExpense(expense.id)}}className=\"lnr lnr-cross-circle\"></div>\n    </div>\n  )\n}\n\nexport default Expense;\n","import React from 'react';\nimport Expense from './expense';\nimport '../assets/stylesheets/expenseList.scss';\n\nfunction ExpenseList(props){\n/* TODO: implement dispaying expenses by date */\n\n  return (\n    <div>\n      <h3 className=\"expense-heading\">Expenses:</h3>\n      {renderExpenses(props.expenses, props.deleteExpense)}\n    </div>\n  )\n}\n\nfunction renderExpenses(expenses, deleteExpense){\n  if (!expenses.length){ return <p>No expenses recorded yet - you should add one!</p> }\n\n  const uniqueSortedDates = getUniqueSortedDates(expenses);\n  return uniqueSortedDates.map((date) => {\n    const expensesOnThisDate = getExpensesOnThisDate(expenses, date)\n    const expenseElements = expensesElements(expensesOnThisDate, date, deleteExpense);\n    const spentThisDay = moneySpentThisDay(expensesOnThisDate);\n\n    return(\n      <div className=\"day-of-expenses\" key={date}>\n        <div className=\"date-header\">\n          <span>{date}</span>\n          <span className=\"daily-spending-total\">${spentThisDay}</span>\n        </div>\n        { expenseElements }\n      </div>\n    )\n  })\n}\n\nfunction expensesElements(expenses, date, deleteExpense){\n  return expenses.map((expense) => {\n    return (<Expense \n            key={expense.id}\n            expense={expense} \n            deleteExpense={deleteExpense}\n          />)\n  })\n}\n\nfunction getExpensesOnThisDate(expenses, date){\n  return expenses.filter((expense)=> {\n    return readableDate(expense.timestamp) === date;\n  })\n}\n\nfunction getUniqueSortedDates(expenses) {\n  expenses = expenses.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n  const dates = expenses.map((expense) => {\n    return readableDate(expense.timestamp);\n  });\n\n  return [...new Set(dates)];\n}\n\nfunction moneySpentThisDay(expenses){\n  return expenses.reduce((acc, expense) => {\n    return acc + expense.amount;\n  }, 0);\n}\n\nfunction readableDate(dateString){\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const dateComponents = dateString.substring(0, 10).split(\"-\");\n  return`${months[Number(dateComponents[1]) - 1]} ${dateComponents[2]}, ${dateComponents[0]}`\n}\n\nexport default ExpenseList;\n","import React, { Component } from 'react';\nimport '../assets/stylesheets/dashboard.scss';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.moneySpentToday = this.moneySpentToday.bind(this);\n    this.moneySpentThisMonth = this.moneySpentThisMonth.bind(this);\n    this.dailyBudget = this.dailyBudget.bind(this);\n    this.monthlyBalance = this.monthlyBalance.bind(this);\n  }\n\n  render() {\n    return(\n      <div className=\"dashboard\">\n        <div className=\"square full-square card\">\n          <div className=\"label\">Left to spend</div>\n          <div className=\"metric\">{this.moneyFormat(this.leftToSpendToday())}</div>\n        </div>\n        <div className=\"half-square-wrapper\">\n          <div className=\"card square half-square\">\n            <div className=\"label\">Spent today</div>\n            <div className=\"metric\">{this.moneyFormat(this.moneySpentToday())}</div>\n          </div>\n          <div className=\"card square half-square\">\n            <div className=\"label\">Monthly balance</div>\n            <div className=\"metric\">{this.monthlyBalance()} <span className=\"submetric\">/(${this.moneySpentThisMonth()})</span></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  moneySpentToday(){\n    return this.props.expenses.reduce((acc, expense) => {\n      return (this.isToday(new Date(), expense.timestamp)) ? (acc + expense.amount) : acc;\n    }, 0);\n  }\n\n  moneySpentThisMonth(){\n    return this.props.expenses.reduce((acc, expense) => {\n      return (this.isThisMonth(new Date(), expense.timestamp)) ? acc + expense.amount : acc;\n    }, 0)\n  }\n\n  isToday(today, timestamp){\n    timestamp = new Date(timestamp);\n    return (\n      today.getYear() === timestamp.getYear() && \n      today.getMonth() === timestamp.getMonth() && \n      today.getDate() === timestamp.getDate()\n    )\n  }\n\n  isThisMonth(today, timestamp){\n    timestamp = new Date(timestamp);\n    return (\n      today.getYear() === timestamp.getYear() && \n      today.getMonth() === timestamp.getMonth()\n    )\n  }\n\n  leftToSpendToday(){\n    return this.dailyBudget() - this.moneySpentToday();\n  }\n\n  monthlyBalance(){\n    let today = new Date();\n    return this.moneyFormat(this.dailyBudget()*today.getDate() - this.moneySpentThisMonth());\n  }\n\n  monthProgress(){\n    const d = new Date();\n    return Math.floor(d.getDate()/this.daysInMonth(d.getMonth(), d.getYear())*100);\n  }\n\n  dailyBudget(){\n    const d = new Date();\n    return Math.floor(this.props.monthlyBudget/this.daysInMonth(d.getMonth(), d.getYear()));\n  }\n\n  daysInMonth (month, year) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n\n  moneyFormat(number){\n    return (number >= 0) ? `$${number}` : `-$${Math.abs(number)}`\n  }\n}\n\n\n\nexport default Dashboard;\n","import React from 'react';\nimport '../assets/stylesheets/navigation.scss';\n\nfunction Navigation(props){\n  return(\n    <div className=\"nav-bar card\">\n      <div className=\"nav-button\" onClick={() => props.navigateToPage(\"home\")}><span className=\"lnr lnr-home\"></span></div>\n      <div className=\"nav-button\" onClick={() => props.navigateToPage(\"stats\")}><span className=\"lnr lnr-chart-bars\"></span></div>\n      <div className=\"nav-button\" onClick={() => props.navigateToPage(\"settings\")}><span className=\"lnr lnr-cog\"></span></div>\n    </div>\n  )\n}\n\nexport default Navigation;","import '../assets/stylesheets/settings.scss';\n\nimport React, { Component } from 'react';\n\nclass Settings extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      monthlyBudget: this.props.monthlyBudget,\n      currentMonthlyBudget: this.props.currentMonthlyBudget,\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render(){\n    return (\n      <div className=\"setting card\">\n        <h3>Settings</h3>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div className=\"one-input\">\n            <label>Default budget</label>\n            <input value={this.state.monthlyBudget} type='number' name='monthlyBudget' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"one-input\">\n            <label>This month's budget</label>\n            <input value={this.state.currentMonthlyBudget} type='number' name='currentMonthlyBudget' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"button-wrapper\">\n            <button className=\"submit\" disabled={this.validSettings()}>Update Settings</button>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n\n  handleInputChange(e){\n    const name = e.target.name;\n    this.setState({\n      [name]: e.target.value\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault(e);\n    \n    const newBudget = {\n      monthlyBudget: Number(this.state.monthlyBudget),\n      currentMonthlyBudget: Number(this.state.currentMonthlyBudget),\n    }\n\n    this.props.updateMonthlyBudget(newBudget);\n  }\n\n  validSettings(){\n    return (this.state.monthlyBudget === 0 || this.state.currentMonthlyBudget === 0);\n  }\n\n\n}\n\nexport default Settings;\n","import '../assets/stylesheets/stats.scss';\n\nimport React, { Component } from 'react';\n\nclass Stats extends Component {\n\n  constructor(props){\n    super(props);\n\n    // TODO: not sure if we need state here at all\n    this.state = {}\n  }\n\n  componentDidMount(){\n  }\n\n  render(){\n    return (\n      <div className=\"stats card\">\n        <div className=\"spending-by-category\">\n          {this.renderSpendingByCategory()}\n        </div>\n      </div>\n    )\n  }\n\n  renderSpendingByCategory(){\n    let spending = {};\n\n    this.props.expenses.forEach((expense) => {\n      const category = expense.category;\n      if(typeof(spending[category]) === 'undefined'){\n        spending[category] = expense.amount;\n      } else {\n        spending[category] += expense.amount;  \n      }\n    })\n\n    return (\n      <div>\n        <div className=\"one-category-row header\">\n          <span className=\"category-name\">Category</span>\n          <span className=\"category-amount\">Sum</span>\n          <span className=\"category-percentage\">Budget %</span>\n        </div>\n\n        {this.renderSpendingTable(spending)}\n      </div>\n    )\n  }\n\n  renderSpendingTable(spending){\n    let spendingArray = Object.keys(spending).map((category) => {\n      return {\n        category: category,\n        amount: Number(spending[category]),\n      }\n    }).sort((a, b) => (a.amount < b.amount) ? 1 : -1);\n\n    return spendingArray.map((category) => {\n      return (\n        <div className=\"one-category-row\" key={category.category}>\n          <span className=\"category-name\">{category.category}</span>\n          <span className=\"category-amount\">${category.amount}</span>\n          <span className=\"category-percentage\">{this.percentage(category.amount)}%</span>\n        </div>\n      )\n    })\n  }\n\n  percentage(amount){\n    return Math.floor(amount/this.props.monthlyBudget * 1000)/10\n  }\n\n}\n\nexport default Stats;\n","import React, { Component } from 'react';\nimport './assets/stylesheets/App.scss';\n\nimport Welcome from './components/welcome'\nimport ExpenseForm from './components/expenseForm'\nimport ExpenseList from './components/expenseList'\nimport Dashboard from './components/dashboard'\nimport Navigation from './components/navigation'\nimport Settings from './components/settings'\nimport Stats from './components/stats'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      expenses: [],\n      categories: [],\n      monthlyBudget: 0,\n      currentMonthlyBudget: 0,\n      currentPage: \"home\",\n    }\n\n    this.fetchExpenses = this.fetchExpenses.bind(this);\n    this.fetchMonthlyBudget = this.fetchMonthlyBudget.bind(this);\n    this.submitNewExpense = this.submitNewExpense.bind(this);\n    this.deleteExpense = this.deleteExpense.bind(this);\n    this.navigateToPage = this.navigateToPage.bind(this);\n    this.updateMonthlyBudget = this.updateMonthlyBudget.bind(this);\n  }\n\n  componentDidMount(){\n    this.fetchExpenses();\n    this.fetchMonthlyBudget();\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n\n        {/*<Welcome />*/}\n        <Navigation navigateToPage={this.navigateToPage} />\n        {this.renderBodyContent()}\n      </div>\n    )\n  }\n\n  renderBodyContent() {\n    if(this.state.currentPage === \"home\"){\n      return this.renderHome();\n    } else if (this.state.currentPage === \"stats\"){\n      return this.renderStats();\n    } else if (this.state.currentPage === \"settings\"){\n      return this.renderSettings();\n    }\n  }\n\n  renderHome(){\n    return (\n      <div className=\"home\">\n        <Dashboard\n          expenses={this.state.expenses}\n          monthlyBudget={this.getCurrentBudget()}\n        />\n        <ExpenseForm \n          submitNewExpense={this.submitNewExpense}\n          categories={this.state.categories}\n        />\n        <ExpenseList \n          expenses={this.state.expenses} \n          deleteExpense={this.deleteExpense}\n        />\n      </div>\n    );\n  }\n\n  renderStats(){\n    return <Stats \n      expenses={this.state.expenses}\n      categories={this.state.categories}\n      monthlyBudget={this.getCurrentBudget()}\n    />\n  }\n\n  renderSettings(){\n    return (\n      <Settings \n        monthlyBudget={this.state.monthlyBudget}\n        currentMonthlyBudget={this.state.currentMonthlyBudget}\n        updateMonthlyBudget={this.updateMonthlyBudget}\n        key={this.state.monthlyBudget + this.state.currentMonthlyBudget}\n      />\n    )\n  }\n\n  getCurrentBudget(){\n    if(this.state.currentMonthlyBudget === this.state.monthlyBudget){\n      return this.state.monthlyBudget;\n    }\n    \n    return this.state.currentMonthlyBudget;\n  }\n  \n  submitNewExpense(expense){\n    console.log(expense);\n    fetch('/api/v1/expenses', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(expense),\n    })\n      .then(res => res.json())\n      .then((response) => { \n        if(response.status === 200){\n          this.setState({\n            expenses: response.expenses,\n            categories: response.categories,\n          })\n        } else {\n          console.log(response.message);\n        }\n      })\n      .catch((error) => { console.log(\"Error fetching data\", error); })\n  }\n\n  deleteExpense(id){\n    fetch(`/api/v1/expenses/${id}`, {\n      method: 'DELETE',\n    })\n      .then(res => res.json())\n      .then((response) => { \n        this.setState({\n          expenses: response.expenses,\n          categories: response.categories,\n        })\n      })\n      .catch((error) => { console.log(\"Error fetching data\", error); })\n  }\n\n  fetchExpenses() {\n    fetch('/api/v1/expenses')\n      .then(res => res.json())\n      .then((response) => { \n        this.setState({\n          expenses: response.expenses,\n          categories: response.categories,\n        })\n      })\n      .catch((error) => { console.log(\"Error fetching data\", error); })\n  }\n\n  fetchMonthlyBudget() {\n    fetch('/api/v1/users/monthly-budget')\n      .then(res => res.json())\n      .then((response) => { \n        this.setState({\n          monthlyBudget: response.monthlyBudget,\n          currentMonthlyBudget: response.currentMonthlyBudget,\n        })\n      })\n      .catch((error) => { console.log(\"Error fetching data\", error); })\n  }\n\n  updateMonthlyBudget(newBudget) {\n    fetch('/api/v1/users/monthly-budget', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newBudget),\n    })\n      .then(res => res.json())\n      .then((response) => { \n        this.setState({\n          monthlyBudget: response.monthlyBudget,\n          currentMonthlyBudget: response.currentMonthlyBudget,\n          currentPage: \"home\"\n        })\n      })\n      .catch((error) => { console.log(\"Error fetching data\", error); })\n  }\n\n  navigateToPage(page){\n    this.setState({\n      currentPage: page\n    })\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}