{"version":3,"sources":["components/signInPage.js","components/expenseForm.js","components/expenseFilter.js","components/expense.js","components/expenseList.js","components/filteredExpenseList.js","components/dashboard.js","components/navigation.js","components/settings.js","components/occurenceCalendar.js","components/spendingStatistics.js","components/charts.js","components/analytics.js","App.js","serviceWorker.js","index.js"],"names":["SignInPage","className","clientId","buttonText","onSuccess","response","window","location","href","tokenId","onFailure","console","log","isSignedIn","uxMode","cookiePolicy","defaultState","amount","description","timestamp","category","displayForm","showCategoryInput","ExpenseForm","props","state","handleInputChange","bind","handleSubmit","setDateTimePickerToNow","toggleExpenseForm","populateCategory","setCategory","revealCategoryInput","resetExpenseFormOnResponse","this","editingExpense","setStateFromExistingExpense","expenseToUpdate","resetState","renderNewExpenseForm","renderAddExpenseToggle","onClick","onSubmit","autoFocus","placeholder","min","value","type","name","onChange","renderCategorySection","renderCategoryInput","disabled","validExpense","formLabel","renderCategoryList","renderCategoryToggle","setState","categories","length","map","trim","key","getCategoryClass","e","target","clickedCategory","innerHTML","toLowerCase","preventDefault","newExpense","id","submitExpenseEdit","submitNewExpense","success","expense","expenseDatetime","Date","toISOString","slice","timezoneOffset","getTimezoneOffset","currentDatetime","now","prevState","clearExpenseToUpdate","Object","keys","Component","FilteredExpenseList","filteredCategory","displayFilter","toggleDisplayFilter","renderFilterContent","renderOpenFilter","renderClosedFilter","renderCategories","updateDescription","expenseCount","renderCategory","getCategoryName","updateCategory","newCategory","clearFilters","document","getElementById","scrollIntoView","Expense","showOptions","getClass","new","renderOptions","editExpense","deleteExpense","toggleMenu","undefined","ExpenseList","expenses","dates","sort","a","b","readableDate","Set","getUniqueSortedDates","date","expensesOnThisDate","filter","getExpensesOnThisDate","expenseElements","expensesElements","spentThisDay","reduce","acc","moneySpentThisDay","renderExpenses","dateString","dateComponents","substring","split","Number","filteredDescription","filteredMinAmount","filteredMaxAmount","Infinity","filteredExpenses","newValue","getExpenseCategories","includes","Dashboard","moneySpentToday","moneySpentThisMonth","dailyBudget","monthlyBalance","displayingCurrentMonth","renderThisMonthsDashboard","renderAnotherMonthsDashboard","getMetricClass","moneyFormat","monthlyBudget","isToday","expenseIsInThisMonth","today","setHours","getHours","getYear","getMonth","getDate","currentDate","year","month","d","Math","floor","daysInMonth","number","abs","Navigation","navigateToPage","src","userImage","alt","renderNavbar","renderDateSelector","previousMonth","setCurrentDate","nextMonth","Settings","defaultMonthlyBudget","currentMonthlyBudget","preferredFirstName","validSettings","newSettings","updateUserSettings","OccurenceCalendar","daysToRoundOutRow","daysThisMonth","cells","i","thisClass","getDay","push","renderCells","SpendingStatistics","formatAmount","sumOfAllExpenses","getAverageSpending","uniquePurchaseDays","getPurchasesPerDay","expenseDate","daysInSelectedMonth","getAverageOccurence","round","toFixed","Charts","expensesByDay","totalSpending","forEach","aggregateDailyExpenses","currentMonthExpenses","expensesByMonth","currentYear","parsedDate","expenseMonth","expenseYear","aggregateMonthlyExpenses","currentYearExpenses","displayYear","noDailyData","noExpensesSection","noMonthlyData","dailySpendingChart","dailyChartTitle","title","domainPadding","theme","VictoryTheme","material","maxDomain","x","y","calculateHighestChartValue","containerComponent","style","pointerEvents","userSelect","touchAction","gutter","orientation","data","symbol","fill","labels","fontSize","tickCount","tickLabels","dependentAxis","range","tickFormat","strokeWidth","dailyBalance","barRatio","datum","labelComponent","backgroundStyle","opacity","backgroundPadding","left","right","fontFamily","averageSpending","stroke","strokeDasharray","bottom","dx","renderDailySpendingChart","monthlySpendingChart","months","monthlyChartTitle","alignment","renderMonthlySpendingChart","renderCharts","formattedExpenses","highestExpense","max","days","spending","day","period","categoryWording","Analytics","currentCategory","handleClick","renderCategorySelector","renderSpendingStatistics","renderOccurenceCalendar","sortExpensesByCategory","renderSpendingHeaders","renderTableOfSpendingByCategory","aggregateYearlyExpenses","concat","getCategoryRowClass","percentageOfMonthlySpending","thisYearsExpenses","App","status","user","pastBudgets","greeting","showExpenseForm","currentPage","datepickerPages","fetchExpenses","fetchUserSettings","fetchSession","renderContent","renderLoggedInInterface","renderNavigation","renderLoggedInBodyContent","renderHome","renderAnalytics","renderSettings","renderDashboard","updated_at","renderExpenseList","pageShouldIncludeDatepicker","image","getCurrentMonthlyBudget","firstName","formattedMonth","formattedYear","formattedDate","fetch","method","headers","body","JSON","stringify","then","res","json","updatedCategories","updatedExpenses","insertOneExpense","message","catch","error","updateOneExpense","updatedExpense","stopPropagation","yearParams","generateUpdatedExpenseList","findExpenseById","fetchOptions","loggedInUser","page","newMonth","newYear","updateCurrentDate","thisYearsExpensesAreAvailable","thisYear","incomingExpenses","currentExpenses","toString","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff46a2ca.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../assets/stylesheets/sign-in-page.scss\";\nimport \"../assets/stylesheets/app.scss\";\nimport { GoogleLogin } from \"react-google-login\";\n\nfunction SignInPage() {\n  return (\n    <div className=\"non-navigation-content\">\n      <div className=\"logged-out-page card\">\n        <h1>Welcome to Trakr</h1>\n        <h3>Trakr helps you</h3>\n        <ul>\n          <li>stay mindful of your spending</li>\n          <li>prevent impulse purchases</li>\n          <li>find holes in your budget</li>\n        </ul>\n\n        <div>\n          <p>To get started, sign in with your Google account</p>\n          <div className=\"button-wrapper\">{renderGoogleLoginButton()}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction renderGoogleLoginButton() {\n  const successfulGoogleResponse = (response) => {\n    window.location.href = `/auth/google_oauth2/callback?token=${response.tokenId}`;\n  };\n\n  const failedGoogleResponse = (response) => {\n    console.log(response);\n  };\n\n  return (\n    <GoogleLogin\n      clientId=\"261179776021-aia4ltj1eq494nmfj9fl7foh28o9ckdu.apps.googleusercontent.com\"\n      buttonText=\"Login\"\n      onSuccess={successfulGoogleResponse}\n      onFailure={failedGoogleResponse}\n      isSignedIn={false}\n      uxMode=\"popup\"\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n}\n\nexport default SignInPage;\n","import '../assets/stylesheets/expenseForm.scss';\n\nimport React, { Component } from 'react';\n\nconst defaultState = {\n  amount: \"\",\n  description: \"\",\n  timestamp: \"\",\n  category: \"\",\n  displayForm: false,\n  showCategoryInput: false,\n}\n\nclass ExpenseForm extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {}\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDateTimePickerToNow = this.setDateTimePickerToNow.bind(this);\n    this.toggleExpenseForm = this.toggleExpenseForm.bind(this);\n    this.populateCategory = this.populateCategory.bind(this);\n    this.setCategory = this.setCategory.bind(this);\n    this.revealCategoryInput = this.revealCategoryInput.bind(this);\n    this.resetExpenseFormOnResponse = this.resetExpenseFormOnResponse.bind(this);\n  }\n\n  componentDidMount(){\n    if(this.editingExpense()){\n      this.setStateFromExistingExpense(this.props.expenseToUpdate)\n    } else {\n      this.resetState();\n    } \n  }\n\n  render(){\n    return this.state.displayForm ? this.renderNewExpenseForm() : this.renderAddExpenseToggle();\n  }\n\n  renderAddExpenseToggle(){\n    return (\n      <button className=\"add-expense-toggle lg submit\" onClick={this.toggleExpenseForm}>\n        <span className=\"lnr lnr-plus-circle\"></span>Add new expense\n      </button>\n    )\n  }\n\n  renderNewExpenseForm(){\n    return (\n      <div className=\"new-expense-form card\">\n        <h2>New Expense</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"one-input\">\n            <label>Amount</label>\n            <div className=\"amount-spent-wrapper\">\n              $ <input \n                  autoFocus={true} \n                  placeholder=\"Amount\"\n                  className=\"amount-spent\"\n                  min=\"1\" \n                  value={this.state.amount} \n                  type='number' \n                  name='amount' \n                  onChange={this.handleInputChange}>\n                </input>\n            </div>\n          </div>\n\n          <div className=\"one-input\">\n            <label>Description</label>\n            <input value={this.state.description} type='text' name='description' placeholder=\"What did you buy?\" onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"one-input\">\n            <label>Category</label>\n            {this.renderCategorySection()}\n            {this.renderCategoryInput()}\n          </div>\n\n          <div className=\"one-input\">\n            <label>Date</label>\n            <input value={this.state.timestamp} type='datetime-local' name='timestamp' onChange={this.handleInputChange}></input>\n          </div>\n\n          <div className=\"button-wrapper\">\n            <button className=\"cancel\" onClick={this.toggleExpenseForm}>Cancel</button>\n            <button className=\"submit md\" disabled={this.validExpense()}>{this.formLabel()}</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  renderCategorySection(){\n    return (\n      <div className=\"category-section\">\n        {this.renderCategoryList()}\n        {this.renderCategoryToggle()}\n      </div>\n    )\n  }\n\n  revealCategoryInput() {\n    this.setState({\n      showCategoryInput: true,\n    })\n  }\n\n  renderCategoryInput(){\n    if(!this.state.showCategoryInput){ return null; }\n    return (<input value={this.state.category} type='text' name='category'  placeholder=\"enter category\" onChange={this.handleInputChange}></input>)\n  }\n\n  renderCategoryList(){\n    if(!this.props.categories.length){ return null; }\n\n    return this.props.categories.map((category) => {\n      if(category != null && category.trim().length){\n        return <span \n          key={category} \n          onClick={this.setCategory} \n          className={this.getCategoryClass(category)}>{category}</span>\n        //return <span key={category} className=\"category\" onClick={this.populateCategory}>{category}</span>\n      }\n\n      return null;\n    })\n  }\n\n  renderCategoryToggle(){\n    if(this.state.showCategoryInput){ return null; }\n\n    return (\n      <span className=\"category add-new-category\" onClick={this.revealCategoryInput}>\n        <span className=\"lnr lnr-plus-circle\"></span>\n      </span>\n    )\n  }\n\n  handleInputChange(e){\n    const name = e.target.name;\n    this.setState({\n      [name]: e.target.value,\n    });\n  }\n\n  setCategory(e){\n    const clickedCategory = e.target.innerHTML.trim().toLowerCase()\n    const category = clickedCategory === this.state.category ? \"\" : clickedCategory;\n\n    this.setState({\n      category,\n    })\n  }\n\n  populateCategory(e){\n    this.setState({\n      category: e.target.innerHTML.trim(),\n      showCategoryInput: true,\n    })\n  }\n\n  getCategoryClass(category){\n    let className = \"category\"\n    if(category === this.state.category){ className += \" selected\"}\n    return className;\n  }\n\n  handleSubmit(e){\n    e.preventDefault(e);\n    \n    const newExpense = {\n      amount: this.state.amount,\n      description: this.state.description,\n      timestamp: this.state.timestamp,\n      category: this.state.category,\n    }\n\n    if(this.editingExpense()){\n      newExpense.id = this.state.id;\n      this.props.submitExpenseEdit(newExpense, this.resetExpenseFormOnResponse);\n    } else {\n      this.props.submitNewExpense(newExpense, this.resetExpenseFormOnResponse);\n    }\n  }\n\n  resetExpenseFormOnResponse(success){\n    if(success){ \n      this.resetState(); \n    } else {\n      console.log(\"something went wrong\");\n    }\n  }\n\n  resetState(){\n    this.setState({...defaultState})\n    this.setDateTimePickerToNow();\n  }\n\n  setStateFromExistingExpense(expense){\n    const expenseDatetime = new Date(expense.timestamp).toISOString().slice(0,16);\n\n    this.setState({ \n      ...expense, \n      displayForm: true,\n      timestamp: expenseDatetime })\n  }\n\n  setDateTimePickerToNow(){\n    const timezoneOffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n    const currentDatetime = new Date(Date.now() - timezoneOffset).toISOString().slice(0,16);\n    this.setState({\n      timestamp: currentDatetime\n    })\n  }\n\n  validExpense(){\n    return (this.state.amount === 0 || this.state.description.length < 2 || !this.state.timestamp.length );\n  }\n\n  toggleExpenseForm(){\n    this.props.toggleExpenseForm();\n\n    this.setState((prevState) => {\n      return {\n        displayForm: !prevState.displayForm\n      }\n    }, () => {\n      // if we closed the form, clear it\n      if(!this.state.displayForm){\n        this.props.clearExpenseToUpdate();\n        this.resetState();\n      }\n    });\n  }\n\n  formLabel(){\n    return this.editingExpense() ? \"Save changes\" : \"Add expense\";\n  }\n\n  editingExpense(){\n    return Object.keys(this.props.expenseToUpdate).length\n  }\n}\n\nexport default ExpenseForm;\n","import '../assets/stylesheets/expenseFilter.scss';\nimport React, { Component } from 'react';\n\nexport default class FilteredExpenseList extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      filteredCategory: \"\",\n      displayFilter: false\n    }\n\n    this.toggleDisplayFilter = this.toggleDisplayFilter.bind(this);\n  }\n\n  render(){\n    return (\n      <div className=\"card opaque filter\">\n        {this.renderFilterContent()}\n      </div>\n    )\n  }\n\n  renderFilterContent(){\n    return this.state.displayFilter ? this.renderOpenFilter() : this.renderClosedFilter();\n  }\n\n  renderOpenFilter() {\n    return (\n      <form>\n        <div className=\"toggle-wrapper\" onClick={this.toggleDisplayFilter}>\n          <span className=\"lnr lnr-cross\"></span> close filter\n        </div>\n\n        <div>\n          <label>Category</label>\n          { this.renderCategories() }\n        </div>\n        <div>\n          <label>Description</label>\n          <input \n            type=\"text\" \n            placeholder=\"Expense name\" \n            onChange={(e) => {\n              this.props.updateDescription(e.target.value.trim())\n            }}>\n          </input>\n          <br />\n        </div>\n        <div className=\"matching-expenses-found\">{this.props.expenseCount} matching expenses found</div>\n      </form>\n    )\n  }\n\n  renderClosedFilter(){\n    return (\n      <div className=\"toggle-wrapper\" onClick={this.toggleDisplayFilter}>\n        <span className=\"lnr lnr-list\"></span> filter expenses\n      </div>\n    )\n  }\n\n  renderCategories(){\n    return(\n      <div className=\"category-section\">\n        { this.props.categories.map((category) => this.renderCategory(category)) }\n      </div>\n    )\n  }\n\n  renderCategory(category){\n    return (\n      <span \n        key={category} \n        className={this.getCategoryName(category, this.state.filteredCategory)} \n        onClick={() => this.updateCategory(category)}>{category}\n      </span>\n    )\n  }\n\n  getCategoryName(category){\n    return category === this.state.filteredCategory ? \"category selected\" : \"category\";\n  }\n\n  updateCategory(category){\n    const newCategory = this.state.filteredCategory === category ? \"\" : category;\n\n    this.setState({filteredCategory: newCategory});\n    this.props.updateCategory(newCategory);\n  }\n\n  toggleDisplayFilter(){\n    if(this.state.displayFilter){ this.clearFilters() }\n    document.getElementById(\"expense-section-heading\").scrollIntoView();\n\n    this.setState((prevState) => ({displayFilter: !prevState.displayFilter}))\n  }\n\n  clearFilters(){\n    this.props.updateDescription(\"\");\n    this.props.updateCategory(\"\");\n  }\n}\n","import React, { Component } from 'react';\nimport '../assets/stylesheets/expense.scss';\n\nexport default class Expense extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      showOptions: false,\n    }\n  }\n\n  render(){\n    const { expense } = this.props;\n\n    return(\n      <div \n        className={this.getClass(expense.new)} \n        key={expense.id} \n      >\n        <div className=\"spending-info-wrapper\">\n          <div className=\"amount-section\">\n            <span className=\"amount\">${expense.amount}</span> \n          </div>\n          <div className=\"spending-info\">\n            <div className=\"category\">{expense.category}</div>\n            <div>{expense.description || \"No description provided\"}</div>\n          </div>\n        </div>\n\n        {this.renderOptions(expense)}\n      </div>\n    )\n  }\n\n  renderOptions(expense){\n    if(this.state.showOptions){\n      return (\n        <div className=\"options-button-wrapper\">\n          <button onClick={(e) => {this.props.editExpense(e, expense.id)}} className=\"cancel lnr lnr-pencil\"></button>\n          <button onClick={(e) => {this.props.deleteExpense(e, expense.id)}} className=\"cancel lnr lnr-trash\"></button>\n          <button onClick={(e) => this.toggleMenu(e) } className=\"cancel lnr lnr-cross-circle\"></button>        \n        </div>\n      )\n    } else {\n      return (\n        <button onClick={(e) => this.toggleMenu(e) }className=\"cancel lnr lnr-menu-circle\"></button>\n      )\n    }\n  }\n\n  getClass(newExpense){\n    let className = (newExpense !== undefined && newExpense) ? \"one-expense new\" : \"one-expense\";\n    if (this.state.showOptions) {\n      className += \" stack-vertically\"\n    }\n\n    return className;\n  }\n\n  toggleMenu(e){\n    e.preventDefault();\n\n    this.setState((prevState) => {\n      return {\n        showOptions: !prevState.showOptions,\n      }\n    })\n  }\n}\n","import Expense from './expense';\nimport React from 'react';\nimport '../assets/stylesheets/expenseList.scss';\n\nexport default function ExpenseList(props){\n  return (\n    <div>\n      {renderExpenses(props.expenses, props.deleteExpense, props.editExpense)}\n    </div>\n  )\n\n  function renderExpenses(expenses, deleteExpense, editExpense){\n    if (!expenses.length){ return <p>No expenses - you should add one!</p> }\n\n    const uniqueSortedDates = getUniqueSortedDates(expenses);\n\n    return uniqueSortedDates.map((date) => {\n      const expensesOnThisDate = getExpensesOnThisDate(expenses, date)\n      const expenseElements = expensesElements(expensesOnThisDate, date, deleteExpense, editExpense);\n      const spentThisDay = moneySpentThisDay(expensesOnThisDate);\n\n      return(\n        <div className=\"day-of-expenses\" key={date}>\n          <div className=\"date-header\">\n            <span>{date}</span>\n            <span className=\"daily-spending-total\">${spentThisDay}</span>\n          </div>\n          { expenseElements }\n        </div>\n      )\n    })\n  }\n\n  function expensesElements(expenses, date, deleteExpense, editExpense){\n    return expenses.map((expense) => {\n      return (<Expense \n                key={expense.id}\n                expense={expense} \n                deleteExpense={deleteExpense}\n                editExpense={editExpense}\n              />)\n    })\n  }\n\n  function getExpensesOnThisDate(expenses, date){\n    return expenses.filter((expense)=> {\n      return readableDate(expense.timestamp) === date;\n    })\n  }\n\n  function getUniqueSortedDates(expenses) {\n    expenses = expenses.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n    const dates = expenses.map((expense) => {\n      return readableDate(expense.timestamp);\n    });\n\n    return [...new Set(dates)];\n  }\n\n  function moneySpentThisDay(expenses){\n    return expenses.reduce((acc, expense) => {\n      return acc + expense.amount;\n    }, 0);\n  }\n\n  function readableDate(dateString){\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const dateComponents = dateString.substring(0, 10).split(\"-\");\n    return`${months[Number(dateComponents[1]) - 1]} ${dateComponents[2]}, ${dateComponents[0]}`\n  }\n}","import ExpenseFilter from './expenseFilter';\nimport ExpenseList from './expenseList';\nimport React, { Component } from 'react';\nimport '../assets/stylesheets/filteredExpenseList.scss';\n\nexport default class FilteredExpenseList extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      filteredCategory: \"\",\n      filteredDescription: \"\",\n      filteredMinAmount: 0,\n      filteredMaxAmount: Infinity,\n    }\n\n    this.updateCategory = this.updateCategory.bind(this);\n  }\n\n  render(){\n    const filteredExpenses = this.filteredExpenses();\n\n    return (\n      <div>\n        <h3 className=\"expense-heading\" id=\"expense-section-heading\">Expenses</h3>\n        <ExpenseFilter \n          updateCategory = {(newValue) => this.updateCategory(newValue)}\n          updateDescription = {(newValue) => this.updateDescription(newValue)}\n          categories = {this.getExpenseCategories()}\n          expenseCount = {filteredExpenses.length}\n        />\n        <ExpenseList \n          expenses = {filteredExpenses} \n          deleteExpense={this.props.deleteExpense}\n          editExpense={this.props.editExpense}\n        />\n      </div>\n    )\n  }\n\n  filteredExpenses(){\n    if(!this.state.filteredCategory.length && !this.state.filteredDescription.length ){ \n      return this.props.expenses;\n    } \n\n    return this.props.expenses.filter((expense) => {\n      return (\n        expense.category.includes(this.state.filteredCategory) &&\n        expense.description.includes(this.state.filteredDescription)\n      ) \n    });\n  }\n\n  getExpenseCategories(){\n    return [...new Set(this.props.expenses.map((e) => e.category))]\n  }\n\n  updateCategory(filteredCategory){\n    this.setState({ filteredCategory });\n  }\n\n  updateDescription(filteredDescription){\n    this.setState({ filteredDescription });\n  }\n}","import React, { Component } from 'react';\nimport '../assets/stylesheets/dashboard.scss';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.moneySpentToday = this.moneySpentToday.bind(this);\n    this.moneySpentThisMonth = this.moneySpentThisMonth.bind(this);\n    this.dailyBudget = this.dailyBudget.bind(this);\n    this.monthlyBalance = this.monthlyBalance.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {this.displayingCurrentMonth() ? this.renderThisMonthsDashboard() : this.renderAnotherMonthsDashboard()}\n      </div>\n    )\n  }\n\n  renderThisMonthsDashboard(){\n    return(\n      <div>\n        <div className=\"card thin square full-square\">\n          <div className=\"label\">Spent today</div>\n          <div className=\"metric\">\n            <span className={this.getMetricClass(this.dailyBudget() - this.moneySpentToday())}>\n              {this.moneyFormat(this.moneySpentToday())}\n            </span>\n            <span className=\"submetric\">\n              |{this.moneyFormat(this.dailyBudget())}\n            </span>\n          </div>\n        </div>\n        <div className=\"half-square-wrapper\">\n          <div className=\"card thin square half-square\">\n            <div className=\"label\">Spent this month</div>\n            <div className=\"metric\">\n              <span className={this.getMetricClass(this.props.monthlyBudget - this.moneySpentThisMonth())}>\n                {this.moneyFormat(this.moneySpentThisMonth())}\n              </span>\n              <span className=\"submetric\">\n                |{this.moneyFormat(this.props.monthlyBudget)}\n              </span>\n            </div>\n          </div>\n          <div className=\"card thin square half-square\">\n            <div className=\"label\">Monthly balance</div>\n            <div className=\"metric\">\n              <span className={this.getMetricClass(this.monthlyBalance())}>\n                {this.moneyFormat(this.monthlyBalance())}\n              </span> \n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderAnotherMonthsDashboard(){\n    return (\n      <div>\n        <div className=\"card thin square full-square\">\n          <div className=\"label\">Spent this month</div>\n          <div className=\"metric\">\n            <span>\n              {this.moneyFormat(this.moneySpentThisMonth())}\n            </span>\n            <span className=\"submetric\">\n              |{this.moneyFormat(this.props.monthlyBudget)}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  moneySpentToday(){\n    return this.props.expenses.reduce((acc, expense) => {\n      return (this.isToday(expense.timestamp)) ? (acc + expense.amount) : acc;\n    }, 0);\n  }\n\n  moneySpentThisMonth(){\n    return this.props.expenses.reduce((acc, expense) => {\n      return (this.expenseIsInThisMonth(new Date(), expense.timestamp)) ? acc + expense.amount : acc;\n    }, 0)\n  }\n\n  isToday(timestamp){\n    const today = new Date();\n    timestamp = new Date(timestamp);\n    \n    // this corrects the timestamp timezone\n    timestamp.setHours(timestamp.getHours() + timestamp.getTimezoneOffset()/60)\n\n    return (\n      today.getYear() === timestamp.getYear() && \n      today.getMonth() === timestamp.getMonth() && \n      today.getDate() === timestamp.getDate()\n    )\n  }\n\n  expenseIsInThisMonth(today, timestamp){\n    timestamp = new Date(timestamp);\n    return (\n      this.props.currentDate.year === timestamp.getYear() + 1900 && \n      this.props.currentDate.month === timestamp.getMonth() + 1\n    )\n  }\n\n  displayingCurrentMonth(){\n    const currentDate = new Date();\n    return (\n      this.props.currentDate.year === currentDate.getYear() + 1900 && \n      this.props.currentDate.month === currentDate.getMonth() + 1\n    )\n  }\n\n  leftToSpendToday(){\n    return this.dailyBudget() - this.moneySpentToday();\n  }\n\n  monthlyBalance(){\n    let today = new Date();\n    return this.dailyBudget()*today.getDate() - this.moneySpentThisMonth();\n  }\n\n  monthProgress(){\n    const d = new Date();\n    return Math.floor(d.getDate()/this.daysInMonth(d.getMonth(), d.getYear())*100);\n  }\n\n  dailyBudget(){\n    const d = new Date();\n    return Math.floor(this.props.monthlyBudget/this.daysInMonth(d.getMonth(), d.getYear()));\n  }\n\n  daysInMonth (month, year) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n\n  moneyFormat(number){\n    return (number >= 0) ? `$${number}` : `-$${Math.abs(number)}`\n  }\n\n  getMetricClass(amount){\n    return amount < 0 ? 'negative' : '';\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport '../assets/stylesheets/navigation.scss';\n\nfunction Navigation(props){\n  return(\n    <div className=\"navigation-section\">\n      {renderNavbar(props)}\n      {renderDateSelector(props)}\n    </div>\n  )\n}\n\nfunction renderNavbar(props){\n  return (\n      <div className=\"navigation-full-width-wrapper\">\n        <div className=\"nav-bar borderless card navigation-icon-bar\">\n          <div className=\"nav-button button\" onClick={() => props.navigateToPage(\"home\")}>\n            {/*<span className=\"lnr lnr-home\"></span>*/}\n            <img className = \"user-photo\" src={props.userImage} alt=\"profile pic\" />\n          </div>\n          <div className=\"nav-button button\" onClick={() => props.navigateToPage(\"analytics\")}>\n            <span className=\"lnr lnr-pie-chart\"></span>\n          </div>\n          <div className=\"nav-button button\" onClick={() => props.navigateToPage(\"settings\")}>\n            <span className=\"lnr lnr-menu\"></span>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nfunction renderDateSelector(props){\n  if(!props.renderDateSelector){ return null; }\n  return (\n    <div className=\"nav-bar borderless card date-selector\">\n      <div className=\"nav-button button\" onClick={() => props.previousMonth()}><span className=\"lnr lnr-chevron-left\"></span></div>\n      <div className=\"date button\" onClick={() => props.setCurrentDate()}>{formattedDate(props.date)}</div>\n      <div className=\"nav-button button\" onClick={() => props.nextMonth()}><span className=\"lnr lnr-chevron-right\"></span></div>\n    </div>\n  )\n}\n\nfunction formattedDate(date){\n  const stringMonths = [\n    \"January\", \n    \"February\", \n    \"March\", \n    \"April\", \n    \"May\", \n    \"June\",\n    \"July\", \n    \"August\", \n    \"September\",\n    \"October\", \n    \"November\", \n    \"December\",\n  ]\n\n  return `${stringMonths[date.month - 1]} ${date.year}`\n}\n\nexport default Navigation;","import '../assets/stylesheets/settings.scss';\n\nimport React, { Component } from 'react';\n\nclass Settings extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      defaultMonthlyBudget: this.props.defaultMonthlyBudget,\n      currentMonthlyBudget: this.props.currentMonthlyBudget,\n      preferredFirstName: this.props.preferredFirstName,\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render(){\n    return (\n      <div>\n        <div className=\"settings card\">\n          <h3>Settings</h3>\n          \n          <form onSubmit={this.handleSubmit}>\n            <div className=\"one-input\">\n              <label>Default budget</label>\n              <input value={this.state.defaultMonthlyBudget} type='number' name='defaultMonthlyBudget' onChange={this.handleInputChange}></input>\n            </div>\n\n            <div className=\"one-input\">\n              <label>This month's budget</label>\n              <input value={this.state.currentMonthlyBudget} type='number' name='currentMonthlyBudget' onChange={this.handleInputChange}></input>\n            </div>\n\n            <div className=\"one-input\">\n              <label>Preferred first name</label>\n              <input value={this.state.preferredFirstName} type='text' name='preferredFirstName' onChange={this.handleInputChange}></input>\n            </div>\n\n            <div className=\"button-wrapper\">\n              <button className=\"submit md\" disabled={this.validSettings()}>Update Settings</button>\n            </div>\n\n          </form>\n        </div>\n        <div className=\"settings card borderless logout\">\n          <a href = \"/logout\">\n            <span>Log out</span>\n            <span className   =\"lnr lnr-arrow-right\"></span>\n          </a>\n        </div>\n      </div>\n    )\n  }\n\n  handleInputChange(e){\n    const name = e.target.name;\n    this.setState({\n      [name]: e.target.value\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault(e);\n    \n    const newSettings = {\n      defaultMonthlyBudget: Number(this.state.defaultMonthlyBudget),\n      currentMonthlyBudget: Number(this.state.currentMonthlyBudget),\n      preferredFirstName: this.state.preferredFirstName.trim(),\n    }\n\n    this.props.updateUserSettings(newSettings);\n  }\n\n  validSettings(){\n    return (this.state.monthlyBudget === 0 || this.state.currentMonthlyBudget === 0);\n  }\n\n\n}\n\nexport default Settings;\n","import '../assets/stylesheets/occurenceCalendar.scss';\n\nimport React from 'react';\n\nexport default function OccurenceCalendar(props){\n  return (\n    <div className=\"card opaque occurence-calendar\">\n      <h3>{getCalendarTitle(props.category)}</h3>\n      <div className=\"cell-wrapper\">\n        {renderCells(props)}\n      </div>\n    </div>\n  )\n}\n\nfunction renderCells(props) {\n  const daysToRoundOutRow = 7 - props.daysThisMonth%7;\n  let cells = [];\n\n  for(let i=1; i <= props.daysThisMonth; i++){\n    const todaysExpenses = props.expenses.filter((expense) => i === getDay(expense.timestamp))\n    const thisClass = todaysExpenses.length ? \"cell has-spending  \" : \"cell\";\n    cells.push(<div className={thisClass} key={i}>{i}</div>);      \n  }\n\n  for(let i=1; i<=daysToRoundOutRow; i++){\n    cells.push(<div className='cell invisible' key={`invisible-${i}`}></div>);\n  }\n\n  return cells;\n}\n\nfunction getDay(date){\n  const timestamp = new Date(date);\n  // this corrects the timestamp timezone\n  timestamp.setHours(timestamp.getHours() + timestamp.getTimezoneOffset()/60)\n\n  return timestamp.getDate();\n}\n\nfunction getCalendarTitle(category){\n  return \"Days I bought\" + (category === \"all\" ? \" anything\" : ` ${category}`)\n}","import '../assets/stylesheets/spendingStatistics.scss';\n\nimport React from 'react';\n\nexport default function SpendingStatistics(props){\n  if(!props.expenses.length){ return null }\n\n  return (\n    <div className=\"card opaque\">\n      <h3>{getStatisticsTitle(props.category)}</h3>\n      <div className=\"one-statistic\">\n        <span className=\"name\">Total purchases</span> \n        <span className=\"value\">{props.expenses.length}</span>\n      </div>\n\n      <div className=\"one-statistic\">\n        <span className=\"name\">Average $ per purchase</span> \n        <span className=\"value\">${getAverageSpending(props.expenses)}</span>\n      </div>\n\n      <div className=\"one-statistic\">\n        <span className=\"name\">Average $ per day</span> \n        <span className=\"value\">${getSpendingPerDay(props.expenses, props.daysThisMonth)}</span>\n      </div>\n\n      <div className=\"one-statistic\">\n        <span className=\"name\">Purchases per day</span> \n        <span className=\"value\">{getPurchasesPerDay(props.expenses, props.daysThisMonth)}</span>\n      </div>\n\n      <div className=\"one-statistic\">\n        <span className=\"name\">Average purchase is every</span> \n        <span className=\"value\">{getAverageOccurence(props.expenses, props.daysThisMonth)} days</span>\n      </div>\n    </div>\n  )\n}\n\nfunction getStatisticsTitle(category){\n  return \"Quick stats on \" + (category === \"all\" ? \" all spending\" : ` ${category}`)\n}\n\nfunction getAverageSpending(expenses){\n  if(!expenses.length) { return formatAmount(0); }\n\n  return formatAmount(sumOfAllExpenses(expenses)/expenses.length);\n}\n\nfunction getSpendingPerDay(expenses, daysThisMonth){\n  return formatAmount(sumOfAllExpenses(expenses)/uniquePurchaseDays(expenses));\n}\n\nfunction getAverageOccurence(expenses, daysThisMonth) {\n  return Math.floor(daysInSelectedMonth(expenses[0], daysThisMonth)/uniquePurchaseDays(expenses) * 10)/10;\n}\n\nfunction getPurchasesPerDay(expenses, daysThisMonth) {\n  return Math.floor(expenses.length/uniquePurchaseDays(expenses) * 10)/10;\n}\n\nfunction sumOfAllExpenses(expenses){\n  return expenses.reduce((acc, expense) => {\n    return acc + expense.amount\n  }, 0);\n}\n\nfunction formatAmount(amount){\n  return (Math.round(amount * 100)/100).toFixed(2);\n}\n\nfunction displayingCurrentMonth(expense){\n  const currentDate = new Date();\n  const expenseDate = new Date(expense.timestamp);\n\n  return (currentDate.getMonth() === expenseDate.getMonth() && currentDate.getYear() === expenseDate.getYear())\n}\n\nfunction uniquePurchaseDays(expenses){\n  const dates = expenses.map((expense) => {\n    const parsedDate = new Date(expense.timestamp);\n    return parsedDate.getDate();\n  });\n\n  return [...new Set(dates)].length\n}\n\nfunction daysInSelectedMonth(expense, daysThisMonth){\n  // if this is a past month, we need to account for days in the past month\n  // if it's a current month, we count days till now\n\n  const currentDate = new Date();\n  return displayingCurrentMonth(expense) ? currentDate.getDate() : daysThisMonth;\n}","import '../assets/stylesheets/charts.scss';\n\nimport React from 'react';\nimport { \n  VictoryArea, \n  VictoryAxis, \n  VictoryBar, \n  VictoryChart,\n  VictoryContainer,\n  VictoryLabel, \n  VictoryLine,\n  VictoryLegend, \n  VictoryTheme \n} from 'victory';\n\nexport default function Charts(props) {\n  return renderCharts(props);\n} \n\nfunction renderCharts(props){\n  let expensesByDay = aggregateDailyExpenses(props.currentMonthExpenses, props.daysThisMonth);\n  let expensesByMonth = aggregateMonthlyExpenses(props.currentYearExpenses, props.displayYear);\n\n  const noDailyData = noExpensesSection(props.category, \"month\");\n  const noMonthlyData = noExpensesSection(props.category, \"year\");\n  const dailySpendingChart = props.currentMonthExpenses.length ? renderDailySpendingChart({...props, expenses: expensesByDay}) : noDailyData;\n  const monthlySpendingChart = props.currentYearExpenses.length ? renderMonthlySpendingChart({...props, expenses: expensesByMonth}) : noMonthlyData;\n\n  return (\n    <div className=\"charts\">\n      {dailySpendingChart}\n      {monthlySpendingChart}\n    </div>\n  )\n}\n\nfunction renderMonthlySpendingChart({expenses, daysThisMonth, monthlyBudget, category, displayYear}){\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  return (\n    <div className=\"chart card opaque\">\n      <h3 className=\"chart-title\">{monthlyChartTitle(category, displayYear)}</h3>\n      <VictoryChart \n        title={monthlyChartTitle(category)} \n        theme={VictoryTheme.material}\n        maxDomain={{ x: 12 }}\n        domainPadding={30}\n        containerComponent={\n          <VictoryContainer\n            style={{\n              pointerEvents: \"auto\",\n              userSelect: \"auto\",\n              touchAction: \"auto\"\n            }}\n          />\n        }\n      >\n\n        <VictoryAxis \n          tickCount={13}\n          style={{\n            tickLabels: { \n              fontSize: 10,\n            },\n          }}\n          tickFormat={(x) => (months[x])}\n        />\n\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(x) => (`$${x}`)}\n        />\n\n        <VictoryBar\n          alignment=\"start\"\n          data={expenses}  \n          labels={({ datum }) => datum.amount > 0 ? `$${datum.amount}` : \"\" }\n          labelComponent={\n            <VictoryLabel\n              backgroundStyle={{ fill: \"white\", opacity: 0.6 }}\n              backgroundPadding={{ left: 3, right: 4, }}\n              style={[\n                { \n                  fill: \"rgb(69, 90, 100)\",\n                  fontSize: 9,\n                  fontFamily: \"sans-serif\",\n                },\n              ]}\n            />\n          }\n          x=\"date\"\n          y=\"amount\"\n        />\n      </VictoryChart>\n    </div>\n  )\n}\n\nfunction renderDailySpendingChart({expenses, daysThisMonth, monthlyBudget, category}){\n  return (\n    <div className=\"chart card opaque\">\n      <h3 className=\"chart-title\">{dailyChartTitle(category)}</h3>\n      <VictoryChart \n        title={dailyChartTitle(category)}\n        domainPadding={30} \n        theme={VictoryTheme.material}\n        maxDomain={{ x: 31, y: calculateHighestChartValue(expenses, monthlyBudget, daysThisMonth)}}\n        containerComponent={\n          <VictoryContainer\n            style={{\n              pointerEvents: \"auto\",\n              userSelect: \"auto\",\n              touchAction: \"auto\"\n            }}\n          />\n        }      \n      >\n        <VictoryLegend \n          x={45}\n          gutter={30}\n          orientation=\"horizontal\"\n          data={[\n            { name: `Average spending`, symbol: { fill: \"#e47575\" } },\n            { name: \"Daily budget\", symbol: { fill: \"#1d82ff\" } }\n          ]}\n          style={{\n            labels: {\n              fontSize: 12,\n            }\n          }}\n        />\n\n        <VictoryAxis \n          tickCount={Math.floor(daysThisMonth/2)}\n          style={{\n            tickLabels: { \n              fontSize: 10,\n            },\n          }}\n        />\n\n        <VictoryAxis\n          dependentAxis\n          range={{x: [1, daysThisMonth]}}\n          tickFormat={(x) => (`$${x}`)}\n        />\n\n        <VictoryArea\n          style={{ \n            data: { fill: \"rgb(29, 130, 255, 0.09)\" },\n            strokeWidth: 0,\n          }}\n          data={[\n            { x: 0, y: daysThisMonth},\n            { x: 0, y: dailyBalance(daysThisMonth, monthlyBudget)},\n            { x: daysThisMonth, y: dailyBalance(daysThisMonth, monthlyBudget)},\n            { x: daysThisMonth, y: 0},\n          ]}\n        />\n\n        <VictoryBar\n          barRatio={0.7}\n          data={expenses}  \n          labels={({ datum }) => { \n            return \"\"// datum.amount ? `$${datum.amount}` : ''\n          }}\n          labelComponent={\n            <VictoryLabel\n              backgroundStyle={{ fill: \"white\", opacity: 0.6 }}\n              backgroundPadding={{ left: 3, right: 4, }}\n              style={[\n                { \n                  fill: \"rgb(69, 90, 100)\",\n                  fontSize: 9,\n                  fontFamily: \"sans-serif\",\n                },\n              ]}\n            />\n          }\n          x=\"date\"\n          y=\"amount\"\n        />\n\n        <VictoryLine \n          data={[\n            {x: 0, y: averageSpending(expenses)},\n            {x: daysThisMonth, y: averageSpending(expenses)}\n          ]}\n          style={{\n            data: {\n              stroke: \"#e47575\",\n              strokeWidth: 1,\n              strokeDasharray: [5, 5],\n            },\n          }}\n          labelComponent={<VictoryLabel\n            backgroundStyle={{ fill: \"#e47575\", opacity: 0.1 }}\n            backgroundPadding={{ left: 3, right: 4, bottom: 1 }}\n            style={[\n              { \n                fill: \"#e47575\",\n                fontSize: 11,\n                fontFamily: \"sans-serif\",\n              },\n            ]}\n            dx={-10}\n          />}\n          labels={({ datum }) => {\n            if(datum.x) { return `$${datum.y}`} } \n          }\n         />\n\n        <VictoryLine \n          data={[\n            {x: 0, y: dailyBalance(daysThisMonth, monthlyBudget)},\n            {x: daysThisMonth, y: dailyBalance(daysThisMonth, monthlyBudget)}\n          ]}\n          style={{\n            data: {\n              stroke: \"#1d82ff\",\n              strokeWidth: 1,\n              strokeDasharray: [5, 5],\n            },\n          }}\n          labelComponent={<VictoryLabel\n            backgroundStyle={{ fill: \"#1d82ff\", opacity: 0.1 }}\n            backgroundPadding={{ left: 3, right: 4, bottom: 1 }}\n            style={[\n              { \n                fill: \"#1d82ff\",\n                fontSize: 11,\n                fontFamily: \"sans-serif\",\n              },\n            ]}\n            dx={-10}\n          />}\n          labels={({ datum }) => {\n            if(datum.x) { return `$${datum.y}`} } \n          }\n        />\n      </VictoryChart>\n    </div>\n  )\n}\n\nfunction aggregateDailyExpenses(expenses, daysThisMonth){\n  let expensesByDay = [];\n\n  for(let i=1; i <= daysThisMonth; i++){\n    let totalSpending = 0;\n\n    expenses.forEach((expense) => {\n      const parsedDate = new Date(expense.timestamp);\n      const expenseDate = parsedDate.getDate()\n\n      if(expenseDate === i){\n        totalSpending += expense.amount;\n      }\n    });\n\n    expensesByDay.push({\n      amount: totalSpending,\n      date: i,\n    })\n  }\n\n  return expensesByDay;\n}\n\n// TODO: we're iterating over expenses twice. we should combine this with iterating over daily expenses\n// TODO: also, let's not use a for loop\nfunction aggregateMonthlyExpenses(expenses, currentYear){\n  let expensesByMonth = [];\n\n  for(let i=0; i <= 11; i++){\n    let totalSpending = 0;\n\n    expenses.forEach((expense) => {\n      const parsedDate = new Date(expense.timestamp);\n      const expenseMonth = parsedDate.getMonth();\n      const expenseYear = parsedDate.getYear() + 1900;\n\n      if(expenseMonth === i && expenseYear === currentYear){\n        totalSpending += expense.amount;\n      }\n    });\n\n    expensesByMonth.push({\n      amount: totalSpending,\n      month: i,\n    })\n  }\n\n  return expensesByMonth;\n}\n\n\nfunction calculateHighestChartValue(formattedExpenses, monthlyBudget, daysThisMonth){\n  const expenses = formattedExpenses.map((expense) => expense.amount);\n  const highestExpense = Math.max(...expenses);\n\n  // limit the chart at eiher the allowed 1.1 daily spending (for space) or the highest expense\n  return Math.max(dailyBalance(daysThisMonth, monthlyBudget) * 1.1, highestExpense *1.1);\n}\n\nfunction dailyBalance(daysThisMonth, monthlyBudget){\n  return Math.round(monthlyBudget/daysThisMonth);\n}\n\nfunction averageSpending(days){\n  let spending = days.map((day) => {\n    return day.amount ? day.amount : '';\n  });\n\n  spending = spending.filter((day) =>{ \n    return day !== \"\";\n  })\n\n  const averageSpending = spending.reduce((a, b) => (a + b)) / spending.length;\n\n  return Math.round(averageSpending);\n}\n\nfunction noExpensesSection(category, period){\n  const categoryWording = category === \"all\" ? \"\" : category;\n\n  return <div className=\"chart card opaque\">There are no recorded {categoryWording} expenses this {period}</div>\n}\n\nfunction dailyChartTitle(category){\n  return `Daily spending` + (category === \"all\" ? \"\" : ` on ${category}`)\n}\n\nfunction monthlyChartTitle(category, year){\n  return `Month-over-month spending` + (category === \"all\" ? \"\" : ` on ${category}`) + ` in ${year}`;\n}","import '../assets/stylesheets/analytics.scss';\nimport OccurenceCalendar from './occurenceCalendar'\nimport SpendingStatistics from './spendingStatistics'\nimport Charts from './charts'\n\nimport React, { Component } from 'react';\n\nexport default class Analytics extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      currentCategory: \"all\",\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render(){\n    return (\n      <div className=\"analytics\">\n        {this.renderCategorySelector()}\n        {this.renderSpendingStatistics()}\n        {this.renderOccurenceCalendar()}\n        {this.renderCharts()}\n      </div>\n    )\n  }\n\n  renderCategorySelector(){\n    if(!this.props.currentMonthExpenses.length){ return null }\n\n    let spending = this.sortExpensesByCategory();\n\n    return (\n      <div className=\"card thin\">\n        {this.renderSpendingHeaders(this.props.currentMonthExpenses.length)}\n        {this.renderTableOfSpendingByCategory(spending)}\n      </div>\n    )\n  }\n\n  renderOccurenceCalendar(){\n    if(!this.props.currentMonthExpenses.length){ return null }\n\n    return <OccurenceCalendar \n      daysThisMonth={this.props.daysThisMonth}\n      category={this.state.currentCategory}\n      expenses={this.filteredExpenses(this.props.currentMonthExpenses)} \n    />\n  }\n\n  renderSpendingStatistics() {\n    return <SpendingStatistics \n      expenses={this.filteredExpenses(this.props.currentMonthExpenses)}\n      category={this.state.currentCategory}\n      daysThisMonth={this.props.daysThisMonth}\n    />\n  }\n\n  renderCharts(){\n    return <Charts \n      currentMonthExpenses={this.filteredExpenses(this.props.currentMonthExpenses)}\n      currentYearExpenses={this.filteredExpenses(this.aggregateYearlyExpenses())}\n      category={this.state.currentCategory}\n      daysThisMonth={this.props.daysThisMonth}\n      monthlyBudget={this.props.monthlyBudget}\n      displayYear={this.props.displayYear}\n    />\n  }\n\n  renderSpendingHeaders(){\n    return (\n      <div className=\"category-header-row\">\n        <span className=\"category-name\">Category</span>\n        <span className=\"category-amount\">Sum</span>\n        <span className=\"category-percentage\">%</span>\n      </div>\n    )\n  }\n\n  renderTableOfSpendingByCategory(spending){\n    if(!Object.keys(spending).length){ return }\n\n    let spendingArray = [{\n      category: \"all\",\n      amount: this.sumOfAllExpenses(),\n    }].concat(\n      Object.keys(spending).map((category) => {\n        return {\n          category: category,\n          amount: Number(spending[category]),\n        }\n      }).sort((a, b) => (a.amount < b.amount) ? 1 : -1)\n    );\n\n    return spendingArray.map((category) => {\n      return (\n        <div className={this.getCategoryRowClass(category.category)}\n          key={category.category}\n          onClick={() => this.handleClick(category.category)}\n        >\n          <span className=\"category-name\">{category.category}</span>\n          <span className=\"category-amount\">${category.amount}</span>\n          <span className=\"category-percentage\">{this.percentageOfMonthlySpending(category.amount)}%</span>\n        </div>\n      )\n    })\n  }\n\n  sortExpensesByCategory(){\n    let spending = {};\n    this.props.currentMonthExpenses.forEach((expense) => {\n      const category = expense.category;\n      if(typeof(spending[category]) === 'undefined'){\n        spending[category] = expense.amount;\n      } else {\n        spending[category] += expense.amount;  \n      }\n    });\n\n    return spending;\n  }\n\n  handleClick(category){\n    this.setState({\n      currentCategory: category,\n    })\n  }\n\n  aggregateYearlyExpenses(){\n    let thisYearsExpenses = [];\n\n    for(const month in this.props.currentYearExpenses){\n      thisYearsExpenses = thisYearsExpenses.concat(this.props.currentYearExpenses[month]);\n    }\n    \n    return thisYearsExpenses;\n  }\n\n  filteredExpenses(expenses){\n    if(this.state.currentCategory === \"all\"){ return expenses; }\n\n    return expenses.filter((expense) => expense.category === this.state.currentCategory);\n  }\n\n  percentageOfMonthlySpending(amount){\n    return Math.floor(amount/this.sumOfAllExpenses() * 1000)/10\n  }\n\n  sumOfAllExpenses(){\n    return this.props.currentMonthExpenses.reduce((acc, expense) => {\n      return acc + expense.amount;\n    }, 0)\n  }\n\n  getCategoryRowClass(category){\n    return \"one-category-row\" + (this.state.currentCategory === category ?  \" selected\" : \"\");\n  }\n}\n","import \"./assets/stylesheets/app.scss\";\nimport React, { Component } from \"react\";\nimport SignInPage from \"./components/signInPage\";\nimport ExpenseForm from \"./components/expenseForm\";\nimport FilteredExpenseList from \"./components/filteredExpenseList\";\nimport Dashboard from \"./components/dashboard\";\nimport Navigation from \"./components/navigation\";\nimport Settings from \"./components/settings\";\nimport Analytics from \"./components/analytics\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"loading\",\n      user: null,\n      expenses: {},\n      expenseToUpdate: {},\n      categories: [],\n      defaultMonthlyBudget: 0,\n      pastBudgets: {},\n      greeting: \"Hi\",\n      currentDate: {\n        month: 1,\n        year: 1990,\n      },\n      showExpenseForm: false,\n      currentPage: \"home\",\n      datepickerPages: [\"home\", \"analytics\"],\n    };\n\n    this.fetchExpenses = this.fetchExpenses.bind(this);\n    this.fetchUserSettings = this.fetchUserSettings.bind(this);\n    this.submitNewExpense = this.submitNewExpense.bind(this);\n    this.submitExpenseEdit = this.submitExpenseEdit.bind(this);\n    this.deleteExpense = this.deleteExpense.bind(this);\n    this.navigateToPage = this.navigateToPage.bind(this);\n    this.updateUserSettings = this.updateUserSettings.bind(this);\n    this.toggleExpenseForm = this.toggleExpenseForm.bind(this);\n    this.previousMonth = this.previousMonth.bind(this);\n    this.nextMonth = this.nextMonth.bind(this);\n    this.setCurrentDate = this.setCurrentDate.bind(this);\n    this.editExpense = this.editExpense.bind(this);\n    this.clearExpenseToUpdate = this.clearExpenseToUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setCurrentDate();\n    this.fetchSession();\n  }\n\n  render() {\n    return <div className=\"App\">{this.renderContent()}</div>;\n  }\n\n  renderContent() {\n    switch (this.state.status) {\n      case \"loggedIn\":\n        return this.renderLoggedInInterface();\n      case \"loggedOut\":\n        return <SignInPage />;\n      default:\n        return null;\n    }\n  }\n\n  renderLoggedInInterface() {\n    return (\n      <div>\n        {this.renderNavigation()}\n        <div className=\"non-navigation-content\">\n          {this.renderLoggedInBodyContent()}\n        </div>\n      </div>\n    );\n  }\n\n  renderLoggedInBodyContent() {\n    if (this.state.currentPage === \"home\") {\n      return this.renderHome();\n    } else if (this.state.currentPage === \"analytics\") {\n      return this.renderAnalytics();\n    } else if (this.state.currentPage === \"settings\") {\n      return this.renderSettings();\n    }\n  }\n\n  renderHome() {\n    return (\n      <div className=\"home\">\n        {this.renderDashboard()}\n        <ExpenseForm\n          key={this.state.expenseToUpdate.updated_at || 0}\n          submitNewExpense={this.submitNewExpense}\n          submitExpenseEdit={this.submitExpenseEdit}\n          toggleExpenseForm={this.toggleExpenseForm}\n          categories={this.state.categories}\n          expenseToUpdate={this.state.expenseToUpdate}\n          clearExpenseToUpdate={this.clearExpenseToUpdate}\n        />\n        {this.renderExpenseList()}\n      </div>\n    );\n  }\n\n  renderNavigation() {\n    if (this.state.showExpenseForm) {\n      return null;\n    }\n\n    return (\n      <Navigation\n        navigateToPage={this.navigateToPage}\n        renderDateSelector={this.pageShouldIncludeDatepicker()}\n        date={this.state.currentDate}\n        nextMonth={this.nextMonth}\n        previousMonth={this.previousMonth}\n        setCurrentDate={this.setCurrentDate}\n        userImage={this.state.user.image}\n      />\n    );\n  }\n\n  renderDashboard() {\n    if (this.state.showExpenseForm) {\n      return null;\n    }\n\n    return (\n      <Dashboard\n        expenses={this.currentMonthExpenses()}\n        monthlyBudget={this.getCurrentMonthlyBudget()}\n        currentDate={this.state.currentDate}\n      />\n    );\n  }\n\n  renderExpenseList() {\n    return (\n      <FilteredExpenseList\n        expenses={this.currentMonthExpenses()}\n        deleteExpense={this.deleteExpense}\n        editExpense={this.editExpense}\n      />\n    );\n  }\n\n  renderAnalytics() {\n    return (\n      <Analytics\n        currentMonthExpenses={this.currentMonthExpenses()}\n        currentYearExpenses={this.currentYearExpenses()}\n        categories={this.state.categories}\n        monthlyBudget={this.getCurrentMonthlyBudget()}\n        daysThisMonth={this.daysThisMonth()}\n        displayYear={this.state.currentDate.year}\n      />\n    );\n  }\n\n  renderSettings() {\n    return (\n      <Settings\n        defaultMonthlyBudget={this.state.defaultMonthlyBudget}\n        currentMonthlyBudget={this.getCurrentMonthlyBudget()}\n        preferredFirstName={this.state.user.firstName}\n        updateUserSettings={this.updateUserSettings}\n        pastBudgets={this.state.pastBudgets}\n        key={this.state.defaultMonthlyBudget + this.getCurrentMonthlyBudget()}\n      />\n    );\n  }\n\n  getCurrentMonthlyBudget() {\n    if (this.state.pastBudgets === undefined) {\n      return;\n    }\n\n    const formattedMonth = this.formattedMonth(this.state.currentDate.month);\n    const formattedYear = this.formattedYear(this.state.currentDate.year);\n    const formattedDate = `${formattedYear}-${formattedMonth}`;\n\n    if (this.state.pastBudgets[formattedDate] === undefined) {\n      return this.state.defaultMonthlyBudget;\n    } else {\n      return this.state.pastBudgets[formattedDate];\n    }\n  }\n\n  submitNewExpense(expense, resetExpenseFormOnResponse) {\n    fetch(\"/api/v1/expenses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(expense),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.status === 200) {\n          let updatedCategories = this.state.categories;\n          let updatedExpenses = this.insertOneExpense(response.newExpense);\n\n          if (!updatedCategories.includes(expense.category)) {\n            updatedCategories = updatedCategories.concat(expense.category);\n          }\n\n          this.setState(\n            {\n              expenses: updatedExpenses,\n              categories: updatedCategories,\n            },\n            () => {\n              this.toggleExpenseForm();\n              resetExpenseFormOnResponse(true);\n            }\n          );\n        } else {\n          console.log(response.message);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error submitting expense\", error);\n      });\n  }\n\n  submitExpenseEdit(expense, resetExpenseFormOnResponse) {\n    fetch(\"/api/v1/expenses\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(expense),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.status === 200) {\n          let updatedCategories = this.state.categories;\n          let updatedExpenses = this.updateOneExpense(response.updatedExpense);\n\n          if (!updatedCategories.includes(expense.category)) {\n            updatedCategories = updatedCategories.concat(expense.category);\n          }\n\n          this.setState(\n            {\n              expenses: updatedExpenses,\n              categories: updatedCategories,\n            },\n            () => {\n              this.toggleExpenseForm();\n              resetExpenseFormOnResponse(true);\n            }\n          );\n        } else {\n          console.log(response.message);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error updating expense\", error);\n      });\n  }\n\n  deleteExpense(e, id) {\n    e.stopPropagation();\n    fetch(`/api/v1/expenses/${id}${this.yearParams()}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          expenses: this.generateUpdatedExpenseList(response.expenses),\n          categories: response.categories,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  }\n\n  clearExpenseToUpdate() {\n    this.setState({\n      expenseToUpdate: {},\n    });\n  }\n\n  editExpense(e, id) {\n    e.stopPropagation();\n    let expenseToUpdate = this.findExpenseById(id);\n\n    this.setState({ expenseToUpdate, showExpenseForm: true });\n  }\n\n  findExpenseById(id) {\n    let expenses = this.currentMonthExpenses();\n\n    return expenses.filter((expense) => {\n      return expense.id === id;\n    })[0];\n  }\n\n  fetchSession() {\n    // TODO: session should return expenses & user data if the user is logged in\n    // this doesn't need to be a separate request\n\n    fetch(\"/session\", this.fetchOptions())\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState(\n          {\n            status: response.status,\n            user: response.loggedInUser,\n          },\n          () => {\n            if (this.state.status === \"loggedIn\") {\n              this.fetchExpenses();\n              this.fetchUserSettings();\n            }\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error fetching session data\", error);\n      });\n  }\n\n  fetchExpenses() {\n    fetch(`/api/v1/expenses/${this.yearParams()}`)\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          expenses: this.generateUpdatedExpenseList(response.expenses),\n          categories: response.categories,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  }\n\n  fetchUserSettings() {\n    fetch(\"/api/v1/users/settings\")\n      .then((res) => res.json())\n      .then((response) => {\n        let user = { ...this.state.user };\n        user.firstName = response.preferredFirstName;\n\n        this.setState({\n          defaultMonthlyBudget: response.defaultMonthlyBudget,\n          pastBudgets: response.pastBudgets,\n          user,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  }\n\n  setCurrentDate() {\n    const d = new Date();\n\n    let currentDate = {\n      month: d.getMonth() + 1,\n      year: 1900 + d.getYear(),\n    };\n\n    this.setState({\n      currentDate,\n    });\n  }\n\n  updateUserSettings(newSettings) {\n    fetch(\"/api/v1/users/settings\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newSettings),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        let user = { ...this.state.user };\n        user.firstName = response.preferredFirstName;\n\n        this.setState({\n          defaultMonthlyBudget: response.defaultMonthlyBudget,\n          pastBudgets: response.pastBudgets,\n          currentPage: \"home\",\n          user,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  }\n\n  navigateToPage(page) {\n    this.setState({\n      currentPage: page,\n    });\n  }\n\n  pageShouldIncludeDatepicker() {\n    return this.state.datepickerPages.includes(this.state.currentPage);\n  }\n\n  fetchOptions() {\n    //const token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\n    return {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-Token\": \"someTestValue\",\n      },\n    };\n  }\n\n  toggleExpenseForm() {\n    this.setState((prevState) => {\n      return {\n        showExpenseForm: !prevState.showExpenseForm,\n      };\n    });\n  }\n\n  yearParams() {\n    return `?year=${this.state.currentDate.year}`;\n  }\n\n  nextMonth() {\n    // JS months run 0 to 11;\n    let newMonth =\n      this.state.currentDate.month < 12 ? this.state.currentDate.month + 1 : 1;\n    let newYear =\n      newMonth === 1\n        ? this.state.currentDate.year + 1\n        : this.state.currentDate.year;\n    this.updateCurrentDate(newMonth, newYear);\n  }\n\n  previousMonth() {\n    // JS months run 0 to 11\n    let newMonth =\n      this.state.currentDate.month > 1 ? this.state.currentDate.month - 1 : 12;\n    let newYear =\n      newMonth === 12\n        ? this.state.currentDate.year - 1\n        : this.state.currentDate.year;\n    this.updateCurrentDate(newMonth, newYear);\n  }\n\n  updateCurrentDate(newMonth, newYear) {\n    const currentDate = {\n      month: newMonth,\n      year: newYear,\n    };\n\n    this.setState({ currentDate }, () => {\n      if (!this.thisYearsExpensesAreAvailable()) {\n        this.fetchExpenses();\n      }\n    });\n  }\n\n  thisYearsExpensesAreAvailable() {\n    const thisYear = this.state.currentDate.year;\n    return typeof this.state.expenses[thisYear] !== \"undefined\";\n  }\n\n  generateUpdatedExpenseList(incomingExpenses) {\n    const year = this.formattedYear(this.state.currentDate.year);\n    let currentExpenses = { ...this.state.expenses };\n    currentExpenses[year] = {};\n\n    incomingExpenses.forEach((expense) => {\n      const month = new Date(expense.timestamp).getMonth() + 1;\n      // add trailing 0\n      const formattedMonth = this.formattedMonth(month);\n\n      if (typeof currentExpenses[year][formattedMonth] === \"undefined\") {\n        currentExpenses[year][formattedMonth] = [expense];\n      } else {\n        currentExpenses[year][formattedMonth].push(expense);\n      }\n    });\n\n    return currentExpenses;\n  }\n\n  insertOneExpense(expense) {\n    let currentExpenses = { ...this.state.expenses };\n    const month = this.formattedMonth(\n      new Date(expense.timestamp).getMonth() + 1\n    );\n    const year = this.formattedYear(\n      new Date(expense.timestamp).getYear() + 1900\n    );\n\n    if (currentExpenses[year][month] === undefined) {\n      currentExpenses[year][month] = [];\n    }\n\n    currentExpenses[year][month].push({ ...expense, new: true });\n    return currentExpenses;\n  }\n\n  updateOneExpense(updatedExpense) {\n    let currentExpenses = { ...this.state.expenses };\n    const month = this.formattedMonth(\n      new Date(updatedExpense.timestamp).getMonth() + 1\n    );\n    const year = this.formattedYear(\n      new Date(updatedExpense.timestamp).getYear() + 1900\n    );\n\n    currentExpenses[year][month] = currentExpenses[year][month].map(\n      (expense) => {\n        if (expense.id === updatedExpense.id) {\n          return { ...updatedExpense, new: true };\n        } else {\n          return expense;\n        }\n      }\n    );\n\n    return currentExpenses;\n  }\n\n  currentMonthExpenses() {\n    if (\n      typeof this.state.expenses[\n        this.formattedYear(this.state.currentDate.year)\n      ] === \"undefined\"\n    ) {\n      return [];\n    }\n\n    const thisYearsExpenses =\n      this.state.expenses[this.formattedYear(this.state.currentDate.year)];\n    const thisMonthsExpenses =\n      thisYearsExpenses[this.formattedMonth(this.state.currentDate.month)];\n\n    return thisMonthsExpenses || [];\n  }\n\n  currentYearExpenses() {\n    if (\n      typeof this.state.expenses[\n        this.formattedYear(this.state.currentDate.year)\n      ] === \"undefined\"\n    ) {\n      return [];\n    }\n\n    return (\n      this.state.expenses[this.formattedYear(this.state.currentDate.year)] || []\n    );\n  }\n\n  formattedMonth(month) {\n    return month.toString().length === 1 ? `0${month}` : month.toString();\n  }\n\n  formattedYear(year) {\n    return year.toString();\n  }\n\n  daysThisMonth() {\n    return new Date(\n      this.state.currentDate.year,\n      this.state.currentDate.month,\n      0\n    ).getDate();\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}